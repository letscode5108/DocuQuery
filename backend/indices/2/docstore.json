{"docstore/metadata": {"b040e889-e29d-4ce2-8e02-494654d3eb41": {"doc_hash": "485b5e20fccae4b877aed2fb2a2e5e36a2b38844b3fe73b2a0304e290b964729"}, "581ea00d-e484-4f8e-b512-2c6efc84a79e": {"doc_hash": "79bac5e51828f8186c36750d8372b7c43ba3463a21aaaeb0358809c48c1037fb", "ref_doc_id": "b040e889-e29d-4ce2-8e02-494654d3eb41"}}, "docstore/data": {"581ea00d-e484-4f8e-b512-2c6efc84a79e": {"__data__": {"id_": "581ea00d-e484-4f8e-b512-2c6efc84a79e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b040e889-e29d-4ce2-8e02-494654d3eb41", "node_type": "4", "metadata": {}, "hash": "485b5e20fccae4b877aed2fb2a2e5e36a2b38844b3fe73b2a0304e290b964729", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Fullstack Internship Assignment \n \nObjective: \nDevelop a full-stack application that allows users to upload PDF documents and ask questions \nregarding the content of these documents. The backend will process these documents and \nutilize natural language processing to provide answers to the questions posed by the users. \n \nTools and Technologies: \nBackend: FastAPI \nNLP Processing: LangChain/LLamaIndex \nFrontend: React.js \nDatabase: SQLite or PostgreSQL (for storing document metadata, if necessary) \nFile Storage: Local filesystem or cloud storage (e.g., AWS S3) for storing uploaded PDFs \nFunctional Requirements: \nPDF Upload: \n\u25cf\u200b Users can upload PDF documents to the application. \n\u25cf\u200b The application stores the PDF and possibly extracts and stores its text content for \nfurther processing. \nAsking Questions: \n\u25cf\u200b Users can ask questions related to the content of an uploaded PDF. \n\u25cf\u200b The system processes the question and the content of the PDF to provide an answer. \nDisplaying Answers: \n\u25cf\u200b The application displays the answer to the user\u2019s question. \n\u25cf\u200b Include the functionality to ask follow-up or new questions on the same document. \nNon-Functional Requirements: \nUsability: Ensure the user interface is intuitive and easy to navigate. \nPerformance: Optimize the processing of PDF documents and the response time for answering \nquestions. \n \nBackend Specification: \nFastAPI Endpoints: \n\u25cf\u200b An endpoint for uploading PDF documents. \n\u25cf\u200b An endpoint for receiving questions and returning answers based on the uploaded \nPDFs. \nPDF Processing: \n\u25cf\u200b Extract text from uploaded PDFs using a suitable library (e.g., PyMuPDF). \n\u25cf\u200b Use the LangChain/llama index to process natural language questions and generate \nanswers based on the PDF content. \nData Management: \n\u25cf\u200b Store information about uploaded documents (e.g., filename, upload date) in a database. \n \nFrontend Specification: \nUser Interface: \n\u25cf\u200b A page for uploading PDF documents. \n\u25cf\u200b A feature for asking questions on uploaded documents and viewing answers. \nInteractivity: \n\u25cf\u200b Implement feedback mechanisms while uploading documents and processing questions. \n\u25cf\u200b Display error messages for unsupported file types or processing errors. \nDesign \n\u25cf\u200b We\u2019ve created the design to give you an idea regarding how the application should look \nwhich you can find here: \nhttps://www.figma.com/file/QHpASp7wGRRcjh0oxCuspL/FullStack-Engineer-Internship-\nAssignment?type=design&node-id=0-1&mode=design&t=geu9rfpXEecN8eFZ-0 \n \nAssignment Deliverables: \nSource Code: Provide the source code for both the frontend and backend, structured and \ncommented appropriately. \nDocumentation: Include a README file with setup instructions, API documentation, and a brief \noverview of the application architecture. \nDemo: A live demo or screencast showcasing the application's functionality. \nEvaluation Criteria: \nFunctionality: The application meets all the functional and non-functional requirements. \nCode Quality: The code is clean, well-organized, and commented. \nDesign and UX: The application is user-friendly and easy to use. \nInnovation: Any additional features or improvements that enhance the application's usability or \nperformance.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 3181, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}}, "docstore/ref_doc_info": {"b040e889-e29d-4ce2-8e02-494654d3eb41": {"node_ids": ["581ea00d-e484-4f8e-b512-2c6efc84a79e"], "metadata": {}}}}